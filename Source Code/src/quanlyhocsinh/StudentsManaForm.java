/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlyhocsinh;

import java.awt.HeadlessException;
import java.awt.Image;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import quanlyhocsinh.DAO.StudentsDAO;

/**
 *
 * @author Gokki
 *
 */
public class StudentsManaForm extends javax.swing.JFrame {

    /**
     * Creates new form StudentsManaForm
     */
    private byte[] m_image = null;
    DefaultTableModel dtm = null;
    static boolean checkConnect = false;

    public static String connStr;
    public static String username;
    public static String password;

    public StudentsManaForm() throws ClassNotFoundException {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(StudentsManaForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();

        dtm = (DefaultTableModel) tbList.getModel();
        setLocationRelativeTo(null);
    }

    public void LoadDataBase() {
        try {
            ArrayList<Students> lst = null;
            lst = StudentsDAO.getInstance().getListStudents();

            if (lst != null) {
                for (Students st : lst) {
                    dtm.addRow(new Object[]{
                        st.getMaHS(), st.getTenHS(), st.getNgaySinh(), st.getGhichu()
                    });
                }
            }
        } catch (Exception e) {
            System.out.println("error");
            JOptionPane.showMessageDialog(null, e);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbList = new javax.swing.JTable();
        btnDetail = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnLoadData = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        tbxName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tbxNotes = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbxDay = new javax.swing.JComboBox<>();
        cbxMonth = new javax.swing.JComboBox<>();
        tbxYear = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tbxID = new javax.swing.JTextField();
        btnImage = new javax.swing.JButton();
        jlbImage = new javax.swing.JLabel();
        btnadd = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnSearchID = new javax.swing.JButton();
        btnFilterName = new javax.swing.JButton();
        btnFilterBirth = new javax.swing.JButton();
        btnFilterNotes = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        tbxPort = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tbxDatabasename = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        tbxUsername = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        tbxPass = new javax.swing.JTextField();
        btnConnectDatabase = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 102));
        setForeground(java.awt.Color.red);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("STUDENTS MANAGEMENT");
        jPanel2.add(jLabel1);

        jPanel8.setBackground(new java.awt.Color(204, 204, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Students List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        tbList.setAutoCreateRowSorter(true);
        tbList.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tbList.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Birth date", "Notes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbListMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbListMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbList);

        btnDetail.setText("Detail");
        btnDetail.setFocusable(false);
        btnDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(btnDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 554, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDetail)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnLoadData.setText("Load Data");
        btnLoadData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLoadData)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnLoadData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(204, 204, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));
        jPanel5.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("ID(*)");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Name(*)");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Birth(*)");

        cbxDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        cbxDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxDayActionPerformed(evt);
            }
        });

        cbxMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Notes");

        tbxID.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnImage.setText("avatar");
        btnImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImageActionPerformed(evt);
            }
        });

        jlbImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbImage.setAutoscrolls(true);
        jlbImage.setOpaque(true);

        btnadd.setBackground(java.awt.SystemColor.activeCaptionBorder);
        btnadd.setText("Add");
        btnadd.setFocusable(false);
        btnadd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnadd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        jLabel7.setText("month");

        jLabel8.setText("day");

        jLabel9.setText("year");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSearchID.setText("Search");
        btnSearchID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchIDActionPerformed(evt);
            }
        });

        btnFilterName.setText("Filter");
        btnFilterName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterNameActionPerformed(evt);
            }
        });

        btnFilterBirth.setText("Filter");
        btnFilterBirth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterBirthActionPerformed(evt);
            }
        });

        btnFilterNotes.setText("Filter");
        btnFilterNotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterNotesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnImage, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jlbImage, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnadd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))))
                        .addGap(103, 103, 103))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tbxID)
                            .addComponent(tbxName)
                            .addComponent(tbxNotes)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cbxDay, 0, 53, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbxMonth, 0, 61, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tbxYear)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSearchID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnFilterName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnFilterBirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnFilterNotes, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tbxID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchID))
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tbxName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFilterName))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbxYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFilterBirth))
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tbxNotes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFilterNotes))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnadd)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnImage, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jlbImage, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel7.setBackground(new java.awt.Color(204, 204, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 51, 51));
        jLabel6.setText("Add Student");
        jPanel7.add(jLabel6);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Port number:");

        tbxPort.setText("1433");
        tbxPort.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tbxPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbxPortActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Database Name: ");

        tbxDatabasename.setText("QuanLyHocSinh");
        tbxDatabasename.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Username:");

        tbxUsername.setText("sa");
        tbxUsername.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Password");

        tbxPass.setText("1234");
        tbxPass.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnConnectDatabase.setText("Connect");
        btnConnectDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectDatabaseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbxPort, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(tbxDatabasename, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(tbxUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addComponent(tbxPass, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConnectDatabase)
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(tbxPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(tbxDatabasename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(tbxUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(tbxPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
            .addComponent(btnConnectDatabase, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static String ConvertToBirthday(String year, String month, String day) {
        String kq = "";

        try {
            int y = Integer.parseInt(year);
            if (y < 0 || y < 1753) {
                JOptionPane.showMessageDialog(null, "Year of birth is not valid.");
                return kq;
            } else {
                int sy = year.length();
                switch (sy) {
                    case 1:
                        kq = kq + "000" + year;
                        break;
                    case 2:
                        kq = kq + "00" + year;
                        break;
                    case 3:
                        kq = kq + "0" + year;
                        break;
                    case 4:
                        kq += year;
                        break;
                    default:
                        break;
                }
                int m = Integer.parseInt(month);
                if (m < 10) {
                    kq = kq + "0" + month;
                } else {
                    kq += month;
                }
                int d = Integer.parseInt(day);
                if (d < 10) {
                    kq = kq + "0" + day;
                } else {
                    kq += day;
                }
            }
        } catch (NumberFormatException ee) {
            return kq;
        } finally {
            return kq;
        }
    }

    public void RefreshTable() {
        int rows = tbList.getRowCount();
        while (rows > 0) {
            dtm.removeRow(0);
            rows--;
        }
        tbList.repaint();
    }

    public void RefreshAdd() {
        tbxID.setText("");
        tbxName.setText("");
        tbxYear.setText("");
        tbxNotes.setText("");
        jlbImage.removeAll();
    }

    private void tbListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbListMouseReleased

        int row = tbList.getSelectedRow();
        int id = (int) dtm.getValueAt(row, 0);
        Students t = StudentsDAO.getInstance().GetStudentByID(id);
        if (t != null) {
            tbxID.setText(String.valueOf(t.getMaHS()));
            tbxName.setText(t.getTenHS());
            tbxYear.setText(String.valueOf(t.getNgaySinh().getYear() + 1900));
            cbxMonth.setSelectedIndex(t.getNgaySinh().getMonth());
            cbxDay.setSelectedIndex(t.getNgaySinh().getDate() - 1);
            tbxNotes.setText(t.getGhichu());

            try {
                byte[] img = StudentsDAO.getInstance().GetImage(t.getMaHS());
                if (img != null) {
                    ImageIcon ii = new ImageIcon(new ImageIcon(img).getImage().getScaledInstance(
                            jlbImage.getWidth(), jlbImage.getHeight(), Image.SCALE_SMOOTH));

                    jlbImage.setIcon(ii);
                } else {
                    jlbImage.setIcon(null);
                    jlbImage.repaint();
                    jlbImage.setText("No avatar");
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(StudentsManaForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_tbListMouseReleased

    private void btnDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailActionPerformed

        try {
            int row = tbList.getSelectedRow();
            int id = (int) dtm.getValueAt(row, 0);
            Students t = StudentsDAO.getInstance().GetStudentByID(id);
            if (t != null) {
                DialogStudentDetail sd = new DialogStudentDetail(this, true, t);
                sd.setVisible(true);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please selects student");
        }


    }//GEN-LAST:event_btnDetailActionPerformed

    private void tbListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbListMousePressed
        btnDetail.enable(true);
        btnDetail.updateUI();
        btnDetail.repaint();
    }//GEN-LAST:event_tbListMousePressed

    private void btnLoadDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadDataActionPerformed
        RefreshTable();
        LoadDataBase();
    }//GEN-LAST:event_btnLoadDataActionPerformed

    private void btnFilterNotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterNotesActionPerformed
        try {
            String notes = tbxNotes.getText();
            ArrayList<Students> lst = StudentsDAO.getInstance().getListStudentsByNotes(notes);
            if (lst != null) {
                RefreshTable();
                lst.forEach((st) -> {
                    dtm.addRow(new Object[]{
                        st.getMaHS(), st.getTenHS(), st.getNgaySinh(), st.getGhichu()
                    });
                });

            } else {
                JOptionPane.showMessageDialog(null, "Student can not be found.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Data input invalid!");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StudentsManaForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnFilterNotesActionPerformed

    private void btnFilterBirthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterBirthActionPerformed
        try {
            String dob = ConvertToBirthday(tbxYear.getText(), cbxMonth.getSelectedItem().toString(), cbxDay.getSelectedItem().toString());
            if (dob == null) {
                JOptionPane.showMessageDialog(null, "bithday input invalid!!");
                return;
            }
            try {
                ArrayList<Students> lst = StudentsDAO.getInstance().getListStudentsByBirth(dob);
                if (lst != null) {
                    RefreshTable();
                    lst.forEach((st) -> {
                        dtm.addRow(new Object[]{
                            st.getMaHS(), st.getTenHS(), st.getNgaySinh(), st.getGhichu()
                        });
                    });

                } else {
                    JOptionPane.showMessageDialog(null, "Student can not be found.");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Data input invalid!");
            }

        } catch (HeadlessException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnFilterBirthActionPerformed

    private void btnFilterNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterNameActionPerformed
        try {
            String name = tbxName.getText();
            ArrayList<Students> lst = null;
            try {
                lst = StudentsDAO.getInstance().getListStudentsByName(name);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(StudentsManaForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (lst != null) {
                RefreshTable();
                for (Students st : lst) {
                    dtm.addRow(new Object[]{
                        st.getMaHS(), st.getTenHS(), st.getNgaySinh(), st.getGhichu()
                    });
                }

            } else {
                JOptionPane.showMessageDialog(null, "Student can not be found.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Data input invalid!");
        }
    }//GEN-LAST:event_btnFilterNameActionPerformed

    private void btnSearchIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchIDActionPerformed
        try {
            int id = Integer.parseInt(tbxID.getText());
            Students st = StudentsDAO.getInstance().GetStudentByID(id);
            if (st != null) {
                DialogStudentDetail sd = new DialogStudentDetail(null, true, st);
                sd.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Student can not be found.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Data input invalid!");
        }
    }//GEN-LAST:event_btnSearchIDActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        Students temp = null;
        try {
            temp = new Students();
            if (tbxID.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, " ID field is must not empty!!");
                return;
            }
            if (tbxName.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, " Name field is must not empty!!");
                return;
            }
            if (tbxYear.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, " Year field is must not empty!!");
                return;
            }
            int id = Integer.parseInt(tbxID.getText());
            String dob = ConvertToBirthday(tbxYear.getText(), cbxMonth.getSelectedItem().toString(), cbxDay.getSelectedItem().toString());
            if (dob == null) {
                JOptionPane.showMessageDialog(null, "bithday input invalid!!");
                return;
            }
            Date d = new Date(Integer.parseInt(tbxYear.getText()),
                    Integer.parseInt(cbxMonth.getSelectedItem().toString()),
                    Integer.parseInt(cbxDay.getSelectedItem().toString()));
            int kq = StudentsDAO.getInstance().UpdateStuByID(id, tbxName.getText(), dob, tbxNotes.getText(), m_image);
            if (kq == 0) {
                JOptionPane.showMessageDialog(null, "Something wrong in update student process.");
                return;
            }
            RefreshTable();
            LoadDataBase();
            RefreshAdd();
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        Students temp = null;
        try {
            temp = new Students();
            if (tbxID.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, " ID field is must not empty!!");
                return;
            }
            if (tbxName.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, " Name field is must not empty!!");
                return;
            }
            if (tbxYear.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, " Year field is must not empty!!");
                return;
            }
            int id = Integer.parseInt(tbxID.getText());

            // tìm xem đã tồn tại học sinh đó trong CSDL chưa
            Students t = null;
            t = StudentsDAO.getInstance().GetStudentByID(id);
            if (t != null) {
                JOptionPane.showMessageDialog(null, "This id has been existing.");
                return;
            }

            String dob = ConvertToBirthday(tbxYear.getText(), cbxMonth.getSelectedItem().toString(), cbxDay.getSelectedItem().toString());
            if (dob == "") {
                return;
            }
            Date d = new Date(Integer.parseInt(tbxYear.getText()),
                    Integer.parseInt(cbxMonth.getSelectedItem().toString()),
                    Integer.parseInt(cbxDay.getSelectedItem().toString()));
            int kq = StudentsDAO.getInstance().insertStudentToDatabase(id, tbxName.getText(), dob, tbxNotes.getText(), m_image);
            if (kq == 0) {
                JOptionPane.showMessageDialog(null, "Something wrong in add student process.");
                return;
            }
            temp = StudentsDAO.getInstance().GetStudentByID(id);
            if (temp != null) {
                dtm.addRow(new Object[]{
                    id, tbxName.getText(), temp.getNgaySinh(), tbxNotes.getText()
                });
            }
            RefreshAdd();
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch (SQLException ex) {
            Logger.getLogger(StudentsManaForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnaddActionPerformed

    private void btnImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImageActionPerformed
        JFileChooser jfc = new JFileChooser();
        int i = jfc.showOpenDialog(null);
        if (i == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            String filename = file.getAbsolutePath();

            ImageIcon ii = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(
                    jlbImage.getWidth(), jlbImage.getHeight(), Image.SCALE_SMOOTH));

            jlbImage.setIcon(ii);

            byte[] b = null;
            try {
                FileInputStream fis = new FileInputStream(new File(filename));
                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                b = new byte[1024];
                for (int readNum; (readNum = fis.read(b)) != -1;) {
                    baos.write(b, 0, readNum);
                }

                m_image = baos.toByteArray();

            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(cbxMonth, ex.getMessage());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(cbxMonth, ex.getMessage());
            }

        }
    }//GEN-LAST:event_btnImageActionPerformed

    private void cbxDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxDayActionPerformed

    }//GEN-LAST:event_cbxDayActionPerformed

    private void tbxPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbxPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbxPortActionPerformed


    private void btnConnectDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectDatabaseActionPerformed
        if (tbxPort.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, " port number is invalid.");
            return;
        }
        if (tbxDatabasename.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, " Database name is invalid.");
            return;
        }
        if (tbxUsername.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, " user name is invalid.");
            return;
        }
        if (tbxPass.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, " password is invalid.");
            return;
        }
        connStr = "jdbc:sqlserver://localhost:" + tbxPort.getText() + ";databasename= " + tbxDatabasename.getText() + ";integratedSecurity=true;";
        username = tbxUsername.getText();
        password = tbxPass.getText();
        checkConnect = StudentsDAO.getInstance().TestConnect();
        if (checkConnect == false) {
            JOptionPane.showMessageDialog(null, "Connect failed.");
        } else {
            JOptionPane.showMessageDialog(null, "Connect Succeeded.");
            LoadDataBase();

        }
    }//GEN-LAST:event_btnConnectDatabaseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentsManaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentsManaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentsManaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentsManaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new StudentsManaForm().setVisible(true);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(StudentsManaForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnectDatabase;
    private javax.swing.JButton btnDetail;
    private javax.swing.JButton btnFilterBirth;
    private javax.swing.JButton btnFilterName;
    private javax.swing.JButton btnFilterNotes;
    private javax.swing.JButton btnImage;
    private javax.swing.JButton btnLoadData;
    private javax.swing.JButton btnSearchID;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnadd;
    private javax.swing.JComboBox<String> cbxDay;
    private javax.swing.JComboBox<String> cbxMonth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlbImage;
    private javax.swing.JTable tbList;
    private javax.swing.JTextField tbxDatabasename;
    private javax.swing.JTextField tbxID;
    private javax.swing.JTextField tbxName;
    private javax.swing.JTextField tbxNotes;
    private javax.swing.JTextField tbxPass;
    private javax.swing.JTextField tbxPort;
    private javax.swing.JTextField tbxUsername;
    private javax.swing.JTextField tbxYear;
    // End of variables declaration//GEN-END:variables
}
